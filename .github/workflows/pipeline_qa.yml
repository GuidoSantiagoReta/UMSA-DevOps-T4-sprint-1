name: remote_ssh_command_ventas_qa

on:
   push:
    branches:
      - ventas

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.QA_PRUEBA_HOST }}
          username: ${{ secrets.USER_VENTAS }}
          key: ${{ secrets.QA_PRUEBA_SSH }}
          script: |
            sudo su  # Cambiar al usuario root
            sudo yum update -y
            sudo yum install -y nodejs npm git
            sudo yum install -y docker  # Instalar Docker
            sudo systemctl start docker  # Iniciar Docker
            sudo systemctl enable docker  # Habilitar Docker para que se inicie en el arranque
            sudo usermod -aG docker $USER  # AÃ±adir el usuario actual al grupo docker
            sudo rm -rf /opt/Ventas_qa
            sudo mkdir -p /opt/Ventas_qa
            sudo cd /opt/Ventas_qa
            sudo git clone https://${{ secrets.GH_TOKEN }}@github.com/alkemyTech/UMSA-DevOps-T4 .
            sudo rm -f /opt/Ventas_qa/Dockerfile  # Eliminar el Dockerfile existente si existe
            sudo docker rmi -f mi-aplicacion-node || true  # Eliminar la imagen Docker anterior si existe (y suprimir errores si no existe)

            # Crear el nuevo Dockerfile
            echo 'FROM node:latest' > Dockerfile
            echo 'WORKDIR /usr/src/app' >> Dockerfile
            echo 'COPY . .' >> Dockerfile
            echo 'RUN npm install' >> Dockerfile
            echo 'EXPOSE 3000' >> Dockerfile
            echo 'CMD ["node", "app.js"]' >> Dockerfile

      - name: Build Docker image
        run: |
          cd /opt/Ventas_qa
          docker build -t mi-aplicacion-node .
            
    
